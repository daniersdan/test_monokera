[2024-12-02T13:30:27.903+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2024-12-02T13:30:28.117+0000] {taskinstance.py:2612} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dag.test_monokera.task_etl scheduled__2024-12-01T12:00:00+00:00 [queued]>
[2024-12-02T13:30:28.122+0000] {taskinstance.py:2612} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dag.test_monokera.task_etl scheduled__2024-12-01T12:00:00+00:00 [queued]>
[2024-12-02T13:30:28.122+0000] {taskinstance.py:2865} INFO - Starting attempt 1 of 2
[2024-12-02T13:30:28.138+0000] {taskinstance.py:2888} INFO - Executing <Task(PythonOperator): task_etl> on 2024-12-01 12:00:00+00:00
[2024-12-02T13:30:28.147+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=398) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-02T13:30:28.148+0000] {standard_task_runner.py:72} INFO - Started process 400 to run task
[2024-12-02T13:30:28.149+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'dag.test_monokera', 'task_etl', 'scheduled__2024-12-01T12:00:00+00:00', '--job-id', '4', '--raw', '--subdir', 'DAGS_FOLDER/dag.test_monokera.py', '--cfg-path', '/tmp/tmps9ph8v93']
[2024-12-02T13:30:28.150+0000] {standard_task_runner.py:105} INFO - Job 4: Subtask task_etl
[2024-12-02T13:30:28.185+0000] {task_command.py:467} INFO - Running <TaskInstance: dag.test_monokera.task_etl scheduled__2024-12-01T12:00:00+00:00 [running]> on host 39feed39e9df
[2024-12-02T13:30:28.240+0000] {taskinstance.py:3131} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='daniel.cristancho' AIRFLOW_CTX_DAG_ID='dag.test_monokera' AIRFLOW_CTX_TASK_ID='task_etl' AIRFLOW_CTX_EXECUTION_DATE='2024-12-01T12:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-12-01T12:00:00+00:00'
[2024-12-02T13:30:28.241+0000] {taskinstance.py:731} INFO - ::endgroup::
[2024-12-02T13:30:28.267+0000] {warnings.py:112} WARNING - /opt/***/dags/src/policys/etl_policys.py:68: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  data['original_data'] = data['original_data'].applymap(lambda x: x.replace("'", "") if isinstance(x, str) else x)

[2024-12-02T13:30:28.274+0000] {etl_policys.py:44} INFO - Staring data extraction for Data Insured
[2024-12-02T13:30:28.286+0000] {etl_policys.py:48} INFO - 1000 rows extracted from Data Insured
[2024-12-02T13:30:28.286+0000] {etl_policys.py:49} INFO - Data extraction successfully finished
[2024-12-02T13:30:28.318+0000] {etl_policys.py:44} INFO - Staring data extraction for Data Insured
[2024-12-02T13:30:28.325+0000] {etl_policys.py:48} INFO - 1000 rows extracted from Data Insured
[2024-12-02T13:30:28.325+0000] {etl_policys.py:49} INFO - Data extraction successfully finished
[2024-12-02T13:30:28.325+0000] {etl_policys.py:196} INFO - Staring transfomration to insured data
[2024-12-02T13:30:28.395+0000] {etl_policys.py:275} INFO - Staring transfomration to insured data
[2024-12-02T13:30:28.522+0000] {etl_policys.py:101} INFO - The update of 266 rows was made on table insured.
[2024-12-02T13:30:28.522+0000] {etl_policys.py:44} INFO - Staring data extraction for Data Insured
[2024-12-02T13:30:28.532+0000] {etl_policys.py:48} INFO - 1000 rows extracted from Data Insured
[2024-12-02T13:30:28.532+0000] {etl_policys.py:49} INFO - Data extraction successfully finished
[2024-12-02T13:30:28.533+0000] {etl_policys.py:44} INFO - Staring data extraction for Data Insured
[2024-12-02T13:30:28.540+0000] {etl_policys.py:48} INFO - 1000 rows extracted from Data Insured
[2024-12-02T13:30:28.540+0000] {etl_policys.py:49} INFO - Data extraction successfully finished
[2024-12-02T13:30:28.540+0000] {etl_policys.py:44} INFO - Staring data extraction for Data Insured
[2024-12-02T13:30:28.546+0000] {etl_policys.py:48} INFO - 1000 rows extracted from Data Insured
[2024-12-02T13:30:28.546+0000] {etl_policys.py:49} INFO - Data extraction successfully finished
[2024-12-02T13:30:28.546+0000] {etl_policys.py:330} INFO - Staring transfomration to insured data
[2024-12-02T13:30:29.981+0000] {etl_policys.py:153} INFO - The update of 266 rows was made on table policy.
[2024-12-02T13:30:29.981+0000] {etl_policys.py:44} INFO - Staring data extraction for Data Insured
[2024-12-02T13:30:29.994+0000] {etl_policys.py:48} INFO - 1000 rows extracted from Data Insured
[2024-12-02T13:30:29.995+0000] {etl_policys.py:49} INFO - Data extraction successfully finished
[2024-12-02T13:30:29.995+0000] {etl_policys.py:44} INFO - Staring data extraction for Data Insured
[2024-12-02T13:30:30.008+0000] {etl_policys.py:48} INFO - 1000 rows extracted from Data Insured
[2024-12-02T13:30:30.008+0000] {etl_policys.py:49} INFO - Data extraction successfully finished
[2024-12-02T13:30:30.008+0000] {etl_policys.py:44} INFO - Staring data extraction for Data Insured
[2024-12-02T13:30:30.023+0000] {etl_policys.py:48} INFO - 1000 rows extracted from Data Insured
[2024-12-02T13:30:30.023+0000] {etl_policys.py:49} INFO - Data extraction successfully finished
[2024-12-02T13:30:30.023+0000] {etl_policys.py:419} INFO - Staring transfomration to insured data
[2024-12-02T13:30:30.025+0000] {warnings.py:112} WARNING - /opt/***/dags/src/policys/etl_policys.py:427: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_source["policy_number"] = data_source[

[2024-12-02T13:30:30.039+0000] {etl_policys.py:469} INFO - Staring transfomration to insured data
[2024-12-02T13:30:30.041+0000] {warnings.py:112} WARNING - /opt/***/dags/src/policys/etl_policys.py:477: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_source["policy_number"] = data_source[

[2024-12-02T13:30:30.055+0000] {etl_policys.py:519} INFO - Staring transfomration to insured data
[2024-12-02T13:30:30.056+0000] {warnings.py:112} WARNING - /opt/***/dags/src/policys/etl_policys.py:527: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_source["policy_number"] = data_source[

[2024-12-02T13:30:30.070+0000] {logging_mixin.py:190} INFO - ****************** Success process ETL of data of csv
[2024-12-02T13:30:30.070+0000] {python.py:240} INFO - Done. Returned value was: None
[2024-12-02T13:30:30.081+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2024-12-02T13:30:30.081+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=dag.test_monokera, task_id=task_etl, run_id=scheduled__2024-12-01T12:00:00+00:00, execution_date=20241201T120000, start_date=20241202T133028, end_date=20241202T133030
[2024-12-02T13:30:30.126+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2024-12-02T13:30:30.144+0000] {taskinstance.py:3900} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-12-02T13:30:30.145+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
